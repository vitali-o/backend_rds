name: Backend RDS CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: vitaliio/backend_rds

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.2
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.7.1

    - name: Log in to Docker Hub
      uses: docker/login-action@v3.3.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract version from Git tag
      id: vars
      run: |
        TAG_VERSION=$(git describe --tags --abbrev=0 || echo "latest")
        echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV
        echo "version=${TAG_VERSION}-${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV

    - name: Build and tag Docker image
      run: |
        docker build -t $IMAGE_NAME:${TAG_VERSION}-${GITHUB_RUN_NUMBER} .

    - name: Push Docker image to Docker Hub
      run: |
        docker push $IMAGE_NAME:${TAG_VERSION}-${GITHUB_RUN_NUMBER}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to EC2
      env:
        DOCKER_IMAGE: ${{ env.IMAGE_NAME }}:${TAG_VERSION}-${GITHUB_RUN_NUMBER}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_USER: ${{ secrets.DB_USER }}
        CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        ssh -t -i private_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
          docker pull $DOCKER_IMAGE
          docker stop backend_rds || true
          docker rm backend_rds || true
          docker run -d --name backend_rds \
            -e DB_HOST=$DB_HOST \
            -e DB_NAME=$DB_NAME \
            -e DB_PASSWORD=$DB_PASSWORD \
            -e DB_USER=$DB_USER \
            -e CORS_ALLOWED_ORIGINS=$CORS_ALLOWED_ORIGINS \
            -p 0.0.0.0:8000:8000 $DOCKER_IMAGE
        EOF
        rm private_key.pem
